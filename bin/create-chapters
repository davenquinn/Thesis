#!/usr/bin/env zsh

# https://stmorse.github.io/journal/Thesis-writeup.html

# First we link to the text that comprises each standalone
# chapter. (Note: we assume that the bibliography in each chapter
# is complete and don't try to add to it ourselves)

cd $PROJECT_DIR

source paper-components/defs.zsh

G="\e[32m"
N="\e[0m"
P="\e[0;34m"

function directory-hash {
  gfind $@ -maxdepth 2 -type d -printf "%p %TY-%Tm-%Td %TH:%TM:%TS %Tz" | md5sum
}

# First get chapter text into latex format
for chapter in chapters/*; do

  # Skip non-directories
  [[ ! -d $chapter ]] && continue
  name=${chapter:t}
  echo "\n\e[1;92m"$name$N
  build=build/$name
  includes=$build/includes
  captions=$build/captions.tex
  # Appendices
  appendices=($chapter/appendices/*.md(N))
  hashfile="$build/.modification-hash"

  mkdir -p $build

  # Get the directory from which included files should be sourced from
  eval include_dir="$(cat chapters/include-directories.json | jq ".[\"$name\"]")"

  if [[ -d $include_dir ]]; then
    function process-text {
      aggregate-text $@ \
      | mark-inline-figures \
      | text-pipeline \
      | implicit-introduction \
      | figurator inline \
        $chapter/includes.yaml \
        --template-dir paper-components/includes \
        --captions $captions \
        --collect-dir $includes
    }

    _hash=$(directory-hash $chapter $include_dir)

  else
    function process-text {
      aggregate-text $@ \
      | text-pipeline \
      | implicit-introduction
    }
    _hash=$(directory-hash $chapter)
  fi
  if [[ -f "$hashfile" ]] && [[ $(cat $hashfile) == $_hash ]]; then
    echo "No changes"
    continue
  fi

  if [[ -d $include_dir ]]; then
    echo "Copying figures and tables from $G$include_dir$N"
    rsync -a --delete $include_dir/ $includes
  else
    if [[ $include_dir != null ]]; then
      echo "\e[0;31mCould not find include directory$N$include_dir"
    else
      echo "\e[0;31mNo include directory specified$N"
    fi
    echo "   (figures and tables will not print)"
  fi

  echo $P"...building template$N"
  cp source/chapter-template.tex "$build/main.tex"
  (( ${#appendices} > 0 )) && cat source/appendices-shim.tex >> $build/main.tex
  # Replace template variables
  sed -i 's|\\$build|'"$build"'|' $build/main.tex

  echo $P"...copying title block and references$N"
  cp $chapter/title-block.tex $chapter/references.bib $build

  echo $P"...building abstract$N"
  cat $chapter/abstract.md \
  | text-pipeline \
  > $build/abstract.tex

  echo $P"...building figure captions$N"
  cat $chapter/figure-captions.md \
  | text-pipeline \
  > $captions

  echo $P"...building main text$N"
  process-text $chapter/chapters/*.md > $build/body.tex

  if (( ${#appendices} > 0 )); then
    echo $P"...building appendices"$N
    process-text ${appendices} > $build/appendices.tex
  fi

  # To save time next time
  echo $_hash > $hashfile

  echo ""
done


